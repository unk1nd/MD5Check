<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Datakommunikasjon og Sikkerhet, obligatorisk oppgave 7</title>
  <link rel="STYLESHEET" type="text/css" href="http://kark.hin.no/css/kursweb.css">

  
  <style type="text/css">
.kode {font-family: courier new,courier,monospace;}
.kodesnutt {font-family: courier new,courier,monospace;font-size:1.2em;margin-top:1em;margin-bottom:1em}
@media print {
.kodesnutt {font-family: courier new,courier,monospace;font-size:10pt;margin-top:1em;margin-bottom:1em}
}
  .style1 {font-family: "Courier New", Courier, monospace}
  </style>
</head>


<body class="hoved">

<h1> Datakommunikasjon og Sikkerhet, obligatorisk oppgave 7.</h1>
<h3>Fil integritets sjekker </h3>
<p><a href="http://en.wikipedia.org/wiki/MD5">MD5  hashing</a> av filer er vanlig for å garantere at en fil ikke er endret  etter at den er produsert. En beregner da MD5 hashverdien av filen og tar vare  på denne. Integritetssjekk av filen innebærer å beregne MD5 hash på nytt og  sammenligne med den lagrede verdien. Dersom disse er like kan en anta at filen  ikke er endret. Du skal i denne oppgaven skrive en slik integritetssjekker. (Som aalternativ til MD5 kan du benytte SHA256 som anses som en sikrere algoritme)<br />
  Skriv et program i Java/C# som gjør følgende:</p>
<ol start="1" type="1">
  <li>Lese alle filer i en angitt       katalog og alle underkataloger For hver fil som leses inn skal programmet       beregne MD5 hash verdien for filen og skrive denne til en       &quot;hashfil&quot;. Formatet på denne &quot;hashfilen&quot; velger du       selv. Denne filen bør lagres på et annet system så snart den er opprettet,       alternativet vil være å kryptere filen, men dette stilles det ikke krav       til her. </li>
  <li>Det bør være mulighet for å       verifisere MD5 hash verdien for en fil mot lagret verdi i       &quot;hashfilen&quot;.</li>
  <li>Det bør være mulighet for å       verifisere alle filer i en katalog med underkataloger mot tidligere       lagrede hash verdier. </li>
</ol>
<p>Som utgangspunkt for oppgaven kan følgende adresser være nyttige: </p>
<ul type="disc">
  <li><a href="http://kark.hin.no/opsys/tanenbaum/java/ExecutableFiles.java">Java program fra Tanenbaum</a> som viser framgansmåten for skanning av alle filer i kataloger og       underkataloger</li>
  <li>Oppsett av Eclipse med Apache Commons ligger <a href="http://kark.hin.no/sikkerhet/filehash/oblig2_tips.html">her</a></li>
  <li>Apache Commons Codec, se       adressen <a href="http://commons.apache.org/codec/">http://commons.apache.org/codec/</a>,       se spesielt klassen DigestUtils <a href="http://commons.apache.org/codec/apidocs/org/apache/commons/codec/digest/DigestUtils.html">http://commons.apache.org/codec/apidocs/org/apache/commons/codec/digest/DigestUtils.html</a></li>
  <li><a href="http://www.oreilly.com/catalog/javacrypt/chapter/ch06.html#33393">MD5 hash fra Java</a>,       inneholder eksempel på bruk av FileStream </li>
  <li>Java Security MessageDigest klassen, <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/security/MessageDigest.html">http://java.sun.com/j2se/1.4.2/docs/api/java/security/MessageDigest.html</a></li>
</ul>
<p><strong>Krav til oppgaven:</strong></p>
<ul type="disc">
  <li>Programkoden       må være pent oppbygd og strukturert, og godt dokumentert. Bruk gjerne       standard retningslinjer for koding, for eksempel den som finnes i Appendix       F i Lewis &amp; Loftus: Java Software Solutions.</li>
</ul>
<ul type="disc">
  <li>Alle       kilder som benyttes må tas med i referanselisten. I selve teksten henviser man på vanlig       måte til kilden i referanselisten.</li>
  <li> Ved innlevering av    skriftlige arbeider <strong>skal kilder</strong> ( Internett, tidsskrift, bok,    personlig meddelelse m. fl. ) <strong>oppgis</strong> <strong>både i selve teksten og i en    fullstendig litteraturliste.</strong>  Ved    direkte avskrift, <strong>skal</strong> det markeres tydelig for eksempel med innrykk    og kursivskrift el. lign, og det skal være kildehenvisning med spesifisert    sidehenvisning. Avvik fra denne regel anses som fusk eller forsøk på fusk.</li>
</ul>
<ul type="disc">
  <li>Innleveres       i 1-ett eksemplar. Alle filer og dokumenter som inngår i       besvarelsen leveres i en ZIP fil.<br />
  </li>
  <li>Dersom ikke annet er oppgitt i oppgaven       kan dere jobbe sammen i grupper, på maks 3 personer. Dere leverer sammen       ved at en på gruppa leverer og registrerer de andre som gruppemedlemmer.       Det er ikke meningen at deloppgavene skal fordeles. Deloppgavene skal       løses i felleskap. Alle filer dere lager skal inneholde navn på       gruppemedlemmene. I Java-filer skal dette være som kommentarer øverst i       filen.</li>
</ul>
<ul type="disc">
  <li>Besvarelsen       må som et minimum inneholde alle Javafiler, og en kort forklaring av       hvordan applikasjonen skal kjøres og selve rapporten.</li>
</ul>
<ul type="disc">
  <li>Forutsetninger       som gjøres underveis må kommenteres og begrunnes i rapporten.</li>
</ul>
<ul type="disc">
  <li>Selve       rapporten må inneholde:</li>
</ul>
<ul type="disc">
  <ul type="circle">
    <li>Kort        oppsummering av problemstilling.</li>
    <li>Overordnet        beskrivelse av programmet som er laget, med vekt på designvalg og        problemer som oppstod og ble løst under arbeidet med programmet.</li>
    <li>Presentasjon        og drøfting av resultater fra utprøvingen med hashing av ulike kataloger        og verifikasjon der det forekommer både filer som er endret og ikke        endret.</li>
    <li>Oppsummering        og konklusjon.</li>
  </ul>
</ul>
<p>&nbsp;</p>
</body>
</html>
